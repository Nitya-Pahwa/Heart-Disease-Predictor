Heart Disease Predictor Project

Overview

This project involves building a predictive model to determine if a person has heart disease or not.

Key Objectives

- Predict heart disease occurrence based on various health metrics and personal data.
- Analyze the relationship between different features and their impact on heart disease prediction.
- Provide a user-friendly solution for heart disease prediction.
Dataset

- Source: A dataset containing health metrics and heart disease status extracted from Kaggle or similar platforms.
- Features: The dataset includes attributes such as:
  - Age
  - Sex
  - Chest Pain Type
  - Resting Blood Pressure
  - Serum Cholesterol
  - Fasting Blood Sugar
  - Resting ECG Results
  - Maximum Heart Rate Achieved
  - Exercise-Induced Angina
  - ST Depression
  - Slope of Peak Exercise ST Segment
  - Number of Major Vessels Colored by Fluoroscopy
  - Thalassemia
  - Target (1 for heart disease, 0 for no heart disease)

Methodology

1. Data Preprocessing:
   
   - Getting basic knowledge of the data.
   - Checking for missing values.
   - Checking for duplicate rows.

2. Exploratory Data Analysis (EDA):

   - Visualize feature distributions using univariate and multivariate analysis.
   - Correlation analysis to identify key predictors of heart disease.
   - Outlier detection and removal.

3. Modeling:

   - Split data into training and testing sets.
   - Train machine learning models including:
     - Logistic Regression
     - Decision Trees
     - Random Forest Classifier
     - XGBoost Classifier
     - Support Vector Classifier (SVC)
   - Evaluate models using metrics like accuracy_score.

4. Hyperparameter Tuning:

   - Used Optuna for hyperparameter optimization to improve model performance.

5. Prediction and Validation:

   - Test the model on unseen data.
   - Compare predicted outcomes with actual outcomes.

Libraries and Tools Used

- Python: Programming language for implementation.
- Pandas: For data manipulation and analysis.
- NumPy: For numerical computations.
- Matplotlib and Seaborn: For data visualization.
- Scikit-learn: For machine learning modeling and evaluation.
- Optuna: For hyperparameter tuning.
- Jupyter Notebook: For interactive coding and documentation.

Results

- The model achieved a reasonable level of accuracy in predicting heart disease occurrence.
- Insights on the most significant features influencing heart disease prediction were derived from the analysis.

Prerequisites

- Python
- Required Libraries:
  - pandas
  - numpy
  - matplotlib
  - seaborn
  - scikit-learn
  - optuna
  - xgboost
  - jupyter notebook
